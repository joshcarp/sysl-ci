// Code generated by sysl DO NOT EDIT.
package simple

import (
	"github.com/anz-bank/sysl-go/config"
	"github.com/anz-bank/sysl-go/core"
	"github.com/anz-bank/sysl-go/handlerinitialiser"
	"github.com/joshcarp/sysl-ci/gen/jsonplaceholder"
)

// DownstreamClients for simple
type DownstreamClients struct {
	jsonplaceholderClient *jsonplaceholder.Client
}

// BuildRestHandlerInitialiser ...
func BuildRestHandlerInitialiser(serviceInterface ServiceInterface, callback core.RestGenCallback, downstream *DownstreamClients) handlerinitialiser.HandlerInitialiser {
	serviceHandler := NewServiceHandler(callback, &serviceInterface, downstream.jsonplaceholderClient)
	serviceRouter := NewServiceRouter(callback, serviceHandler)
	return serviceRouter
}

// BuildDownstreamClients ...
func BuildDownstreamClients(cfg *config.DefaultConfig) (*DownstreamClients, error) {
	var err error = nil
	jsonplaceholderHTTPClient, jsonplaceholderErr := core.BuildDownstreamHTTPClient("jsonplaceholder", &cfg.GenCode.Downstream.(*DownstreamConfig).Jsonplaceholder)
	if jsonplaceholderErr != nil {
		return nil, jsonplaceholderErr
	}

	jsonplaceholderClient := jsonplaceholder.NewClient(jsonplaceholderHTTPClient, cfg.GenCode.Downstream.(*DownstreamConfig).Jsonplaceholder.ServiceURL)

	return &DownstreamClients{jsonplaceholderClient: jsonplaceholderClient}, err
}

// NewDefaultConfig ...
func NewDefaultConfig() config.DefaultConfig {
	return config.DefaultConfig{
		Library: config.LibraryConfig{},
		GenCode: config.GenCodeConfig{Downstream: &DownstreamConfig{}},
	}
}
